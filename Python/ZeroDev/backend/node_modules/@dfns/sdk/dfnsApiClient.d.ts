import { DfnsBaseApiOptions } from './types/generic';
import { AuthClient } from './generated/auth';
import { ExchangesClient } from './generated/exchanges';
import { FeeSponsorsClient } from './generated/feeSponsors';
import { KeysClient } from './generated/keys';
import { NetworksClient } from './generated/networks';
import { PermissionsClient } from './generated/permissions';
import { PoliciesClient } from './generated/policies';
import { SignersClient } from './generated/signers';
import { StakingClient } from './generated/staking';
import { WalletsClient } from './generated/wallets';
import { WebhooksClient } from './generated/webhooks';
import { CredentialSigner } from './signer';
export type DfnsApiClientOptions = DfnsBaseApiOptions & {
    /** Needs to be specified to use any endpoint that required User Action Signing flow */
    signer?: CredentialSigner;
};
export declare class DfnsApiClient {
    private apiOptions;
    constructor(apiOptions: DfnsApiClientOptions);
    get auth(): AuthClient;
    get exchanges(): ExchangesClient;
    get feeSponsors(): FeeSponsorsClient;
    get keys(): KeysClient;
    get networks(): NetworksClient;
    get permissions(): PermissionsClient;
    get policies(): PoliciesClient;
    get staking(): StakingClient;
    get signers(): SignersClient;
    get wallets(): WalletsClient;
    get webhooks(): WebhooksClient;
}
