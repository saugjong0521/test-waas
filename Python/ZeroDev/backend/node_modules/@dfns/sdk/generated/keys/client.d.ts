import { DfnsApiClientOptions } from '../../types/generic';
import * as T from './types';
export declare class KeysClient {
    private apiOptions;
    constructor(apiOptions: DfnsApiClientOptions);
    createKey(request: T.CreateKeyRequest): Promise<T.CreateKeyResponse>;
    delegateKey(request: T.DelegateKeyRequest): Promise<T.DelegateKeyResponse>;
    deleteKey(request: T.DeleteKeyRequest): Promise<T.DeleteKeyResponse>;
    deriveKey(request: T.DeriveKeyRequest): Promise<T.DeriveKeyResponse>;
    exportKey(request: T.ExportKeyRequest): Promise<T.ExportKeyResponse>;
    generateSignature(request: T.GenerateSignatureRequest): Promise<T.GenerateSignatureResponse>;
    getKey(request: T.GetKeyRequest): Promise<T.GetKeyResponse>;
    getSignature(request: T.GetSignatureRequest): Promise<T.GetSignatureResponse>;
    importKey(request: T.ImportKeyRequest): Promise<T.ImportKeyResponse>;
    listKeys(request?: T.ListKeysRequest): Promise<T.ListKeysResponse>;
    listSignatures(request: T.ListSignaturesRequest): Promise<T.ListSignaturesResponse>;
    updateKey(request: T.UpdateKeyRequest): Promise<T.UpdateKeyResponse>;
}
