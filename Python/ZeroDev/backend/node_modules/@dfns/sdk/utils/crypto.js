"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.rawSignatureToAns1 = exports.exportPublicKeyInPemFormatBrowser = void 0;
const buffer_1 = require("buffer");
const base64_1 = require("./base64");
const string_1 = require("./string");
const bigint_1 = require("./bigint");
// Using crypto.subtle in order to run this in the browser
// Adding `Browser` in the function name to distinguish with native node crypto module usage
const exportPublicKeyInPemFormatBrowser = async (key) => {
    const exported = await crypto.subtle.exportKey('spki', key.publicKey);
    const b64Exported = (0, base64_1.toBase64)(buffer_1.Buffer.from(exported));
    const pem = `-----BEGIN PUBLIC KEY-----\n${(0, string_1.splitString)(b64Exported).join("\n")}\n-----END PUBLIC KEY-----`;
    return pem;
};
exports.exportPublicKeyInPemFormatBrowser = exportPublicKeyInPemFormatBrowser;
const rawSignatureToAns1 = (rawSignature) => {
    const r = rawSignature.slice(0, 32);
    const s = rawSignature.slice(32);
    const minR = (0, bigint_1.minimizeBigInt)(r);
    const minS = (0, bigint_1.minimizeBigInt)(s);
    return new Uint8Array([
        0x30,
        minR.length + minS.length + 4,
        0x02,
        minR.length,
        ...minR,
        0x02,
        minS.length,
        ...minS
    ]);
};
exports.rawSignatureToAns1 = rawSignatureToAns1;
