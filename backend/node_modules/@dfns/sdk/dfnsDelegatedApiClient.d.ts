import { DfnsBaseApiOptions } from './types/generic';
import { DelegatedAuthClient } from './generated/auth';
import { DelegatedExchangesClient } from './generated/exchanges';
import { DelegatedFeeSponsorsClient } from './generated/feeSponsors';
import { DelegatedKeysClient } from './generated/keys';
import { DelegatedNetworksClient } from './generated/networks';
import { DelegatedPermissionsClient } from './generated/permissions';
import { DelegatedPoliciesClient } from './generated/policies';
import { DelegatedSignersClient } from './generated/signers';
import { DelegatedWalletsClient } from './generated/wallets';
import { DelegatedWebhooksClient } from './generated/webhooks';
export type DfnsDelegatedApiClientOptions = DfnsBaseApiOptions;
export declare class DfnsDelegatedApiClient {
    private apiOptions;
    constructor(apiOptions: DfnsDelegatedApiClientOptions);
    get auth(): DelegatedAuthClient;
    get exchanges(): DelegatedExchangesClient;
    get feeSponsors(): DelegatedFeeSponsorsClient;
    get keys(): DelegatedKeysClient;
    get networks(): DelegatedNetworksClient;
    get permissions(): DelegatedPermissionsClient;
    get policies(): DelegatedPoliciesClient;
    get wallets(): DelegatedWalletsClient;
    get webhooks(): DelegatedWebhooksClient;
    get signers(): DelegatedSignersClient;
}
