"use strict";
/* eslint @typescript-eslint/no-unused-vars: 0 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeeSponsorsClient = void 0;
const fetch_1 = require("../../utils/fetch");
const userActionFetch_1 = require("../../utils/userActionFetch");
const url_1 = require("../../utils/url");
class FeeSponsorsClient {
    constructor(apiOptions) {
        this.apiOptions = apiOptions;
    }
    async activateFeeSponsor(request) {
        const path = (0, url_1.buildPathAndQuery)('/fee-sponsors/:feeSponsorId/activate', {
            path: request ?? {},
            query: {},
        });
        const response = await (0, userActionFetch_1.userActionFetch)(path, {
            method: 'PUT',
            body: {},
            apiOptions: this.apiOptions,
        });
        return response.json();
    }
    async createFeeSponsor(request) {
        const path = (0, url_1.buildPathAndQuery)('/fee-sponsors', {
            path: request ?? {},
            query: {},
        });
        const response = await (0, userActionFetch_1.userActionFetch)(path, {
            method: 'POST',
            body: request.body,
            apiOptions: this.apiOptions,
        });
        return response.json();
    }
    async deactivateFeeSponsor(request) {
        const path = (0, url_1.buildPathAndQuery)('/fee-sponsors/:feeSponsorId/deactivate', {
            path: request ?? {},
            query: {},
        });
        const response = await (0, userActionFetch_1.userActionFetch)(path, {
            method: 'PUT',
            body: {},
            apiOptions: this.apiOptions,
        });
        return response.json();
    }
    async deleteFeeSponsor(request) {
        const path = (0, url_1.buildPathAndQuery)('/fee-sponsors/:feeSponsorId', {
            path: request ?? {},
            query: {},
        });
        const response = await (0, userActionFetch_1.userActionFetch)(path, {
            method: 'DELETE',
            body: {},
            apiOptions: this.apiOptions,
        });
        return response.json();
    }
    async getFeeSponsor(request) {
        const path = (0, url_1.buildPathAndQuery)('/fee-sponsors/:feeSponsorId', {
            path: request ?? {},
            query: {},
        });
        const response = await (0, fetch_1.simpleFetch)(path, {
            method: 'GET',
            apiOptions: this.apiOptions,
        });
        return response.json();
    }
    async listFeeSponsors(request) {
        const path = (0, url_1.buildPathAndQuery)('/fee-sponsors', {
            path: request ?? {},
            query: request?.query ?? {},
        });
        const response = await (0, fetch_1.simpleFetch)(path, {
            method: 'GET',
            apiOptions: this.apiOptions,
        });
        return response.json();
    }
    async listSponsoredFees(request) {
        const path = (0, url_1.buildPathAndQuery)('/fee-sponsors/:feeSponsorId/fees', {
            path: request ?? {},
            query: request.query ?? {},
        });
        const response = await (0, fetch_1.simpleFetch)(path, {
            method: 'GET',
            apiOptions: this.apiOptions,
        });
        return response.json();
    }
}
exports.FeeSponsorsClient = FeeSponsorsClient;
