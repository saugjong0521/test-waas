import { DfnsBaseApiOptions } from '../types/generic';
export type HttpMethod = 'GET' | 'POST' | 'PUT' | 'DELETE';
export type FetchOptions<T> = {
    method: HttpMethod;
    headers?: Record<string, string>;
    body?: string | unknown;
    apiOptions: T;
};
export type Fetch<T> = (resource: string | URL, options: FetchOptions<T>) => Promise<Response>;
export declare const fullUrl: <T extends DfnsBaseApiOptions>(fetch: Fetch<T>) => Fetch<T>;
export declare const jsonSerializer: <T>(fetch: Fetch<T>) => Fetch<T>;
export declare const errorHandler: <T>(fetch: Fetch<T>) => Fetch<T>;
export declare const catchPolicyPending: <T>(fetch: Fetch<T>) => Fetch<T>;
export declare const dfnsAuth: <T extends DfnsBaseApiOptions>(fetch: Fetch<T>) => Fetch<T>;
export declare const simpleFetch: Fetch<DfnsBaseApiOptions>;
