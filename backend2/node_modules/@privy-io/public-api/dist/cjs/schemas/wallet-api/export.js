"use strict";var e=require("zod");let t=/^[A-Za-z0-9+/=]+$/;const n=e.z.literal("HPKE");let r=e.z.union([e.z.string().regex(/^-----BEGIN PUBLIC KEY-----\n[A-Za-z0-9+/=\n]+-----END PUBLIC KEY-----\n$/,"Invalid PEM format. Must be in format: -----BEGIN PUBLIC KEY-----\\n<base64>\\n-----END PUBLIC KEY-----\\n").refine((e=>{let n=e.replace("-----BEGIN PUBLIC KEY-----\n","").replace("\n-----END PUBLIC KEY-----\n","").replace(/\n/g,"");return t.test(n)}),"Invalid base64 content in PEM"),e.z.string().regex(t,"Invalid base64-encoded DER format")]);const i=e.z.object({encryption_type:n,recipient_public_key:r}).strict(),a=e.z.object({encryption_type:e.z.literal("HPKE"),ciphertext:e.z.string().base64(),encapsulated_key:e.z.string()});exports.HPKEEncryption=n,exports.PrivateKeyExportInput=i,exports.PrivateKeyExportResponse=a;
