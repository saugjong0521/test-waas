import{z as t}from"zod";import{WalletAddress as e}from"../core.mjs";import{HPKEEncryption as i}from"./export.mjs";import{BaseWalletApiCreateInput as r}from"./wallets/index.mjs";import"bs58";import"libphonenumber-js/max";import"viem";import"@privy-io/api-base";import"../api.mjs";import"../transaction.mjs";import"./wallets/spark/index.mjs";import"./wallets/spark/utils.mjs";const o=t.enum(["ethereum"]),p=t.enum(["private-key"]),m=t.object({address:e,chain_type:o,entropy_type:p,encryption_type:i}).strict(),s=t.object({encryption_type:i,encryption_public_key:t.string()}),n=r.omit({chain_type:!0,authorization_key_ids:!0,authorization_threshold:!0}).extend({wallet:t.object({address:e,chain_type:o,entropy_type:p,ciphertext:t.string(),encapsulated_key:t.string(),encryption_type:i})}).strict();export{m as WalletImportInitInput,s as WalletImportInitResponse,n as WalletImportSubmitInput,o as WalletImportSupportedChains,p as WalletImportSupportedEntropyTypes};
